*** a/sound/stm/common.h	2010-04-30 19:34:18.000000000 +0200
--- b/sound/stm/common.h	2010-05-01 14:53:58.015993521 +0200
***************
*** 250,255 ****
--- 250,258 ----
  			if (level <= verbosity) \
  				snd_printk(KERN_INFO format, ## args); \
  		} while (0)
+ 
+ #define snd_stm_assert snd_assert
+ 
  #else
  
  #define snd_stm_printd(level, format, args...) \
***************
*** 259,270 ****
--- 262,288 ----
  						__snd_stm_component, \
  						__LINE__, ## args); \
  		} while (0)
+ 
+ #define snd_stm_assert(expr, args...) \
+ 		do { \
+ 			if (unlikely(!(expr))) { \
+ 				printk(KERN_ERR "snd-stm:%s:%d: BUG? " \
+ 						"(%s)\n", \
+ 						__snd_stm_component, \
+ 						__LINE__, \
+ 						__stringify(expr)); \
+ 				dump_stack(); \
+ 				args; \
+ 			} \
+ 		} while (0)
  #endif
  
  #else
  
  #define snd_stm_printd(...) /* nothing */
  
+ #define snd_stm_assert snd_assert
+ 
  #endif
  
  /* Error messages */
*** b/sound/core/sound.c        2010-02-15 09:28:06.000000000 +0100
--- a/sound/core/sound.c        2010-02-16 09:13:06.000000000 +0100
***************
*** 312,317 ****
--- 312,325 ----
  	return -1;
  }

+ int snd_get_minor(int type, int card, int dev)
+ {
+       return find_snd_minor(type, snd_cards[card], dev);
+ }
+
+ EXPORT_SYMBOL(snd_get_minor);
+
+
  /**
   * snd_unregister_device - unregister the device on the given card
   * @type: the device type, SNDRV_DEVICE_TYPE_XXX
*** a/include/sound/core.h	2009-12-03 04:51:21.000000000 +0100
--- b/include/sound/core.h	2010-05-01 15:20:56.905993232 +0200
***************
*** 362,367 ****
--- 362,384 ----
  	__snd_printk(1, __FILE__, __LINE__, fmt, ##args)
  
  /**
+  * snd_assert - run-time assertion macro
+  * @expr: expression
+  *
+  * This macro checks the expression in run-time and invokes the commands
+  * given in the rest arguments if the assertion is failed.
+  * When CONFIG_SND_DEBUG is not set, the expression is executed but
+  * not checked.
+  */
+ #define snd_assert(expr, args...) do {					\
+ 	if (unlikely(!(expr))) {					\
+ 		snd_printk(KERN_ERR "BUG? (%s)\n", __ASTRING__(expr));	\
+ 		dump_stack();						\
+ 		args;							\
+ 	}								\
+ } while (0)
+ 
+ /**
   * snd_BUG - give a BUG warning message and stack trace
   *
   * Calls WARN() if CONFIG_SND_DEBUG is set.
***************
*** 389,394 ****
--- 406,412 ----
  #else /* !CONFIG_SND_DEBUG */
  
  #define snd_printd(fmt, args...)	do { } while (0)
+ #define snd_assert(expr, args...)	(void)(expr)
  #define snd_BUG()			do { } while (0)
  static inline int __snd_bug_on(int cond)
  {
***************
*** 458,462 ****
--- 458,463 ----
  const struct snd_pci_quirk *
  snd_pci_quirk_lookup(struct pci_dev *pci, const struct snd_pci_quirk *list);

+ int snd_get_minor(int type, int card, int dev);

  #endif /* __SOUND_CORE_H */
diff -rcN linux-sh4-2.6.32.10_stm24_0201_orig/sound/core/oss/pcm_oss.c linux-sh4/sound/core/oss/pcm_oss.c
*** linux-sh4-2.6.32.10_stm24_0201_orig/sound/core/oss/pcm_oss.c	Mon May  3 15:58:10 2010
--- linux-sh4/sound/core/oss/pcm_oss.c	Tue May  4 01:00:33 2010
***************
*** 219,224 ****
--- 219,226 ----
  	return 0;
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_param_mask);
+ 
  static int _snd_pcm_hw_param_min(struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int val,
  				 int dir)
***************
*** 278,283 ****
--- 280,287 ----
  	return snd_pcm_hw_param_value_min(params, var, dir);
  }
  
+ EXPORT_SYMBOL_GPL(_snd_pcm_hw_param_min);
+ 
  static int _snd_pcm_hw_param_max(struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int val,
  				 int dir)
***************
*** 467,472 ****
--- 471,478 ----
  	return v;
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_param_near);
+ 
  static int _snd_pcm_hw_param_set(struct snd_pcm_hw_params *params,
  				 snd_pcm_hw_param_t var, unsigned int val,
  				 int dir)
***************
*** 543,548 ****
--- 549,556 ----
  	return snd_pcm_hw_param_value(params, var, NULL);
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_param_set);
+ 
  static int _snd_pcm_hw_param_setinteger(struct snd_pcm_hw_params *params,
  					snd_pcm_hw_param_t var)
  {
***************
*** 554,560 ****
  	}
  	return changed;
  }
! 	
  /*
   * plugin
   */
--- 562,570 ----
  	}
  	return changed;
  }
! 
! EXPORT_SYMBOL_GPL(_snd_pcm_hw_param_setinteger);
! 
  /*
   * plugin
   */
diff -rcN linux-sh4-2.6.32.10_stm24_0201_orig/sound/core/pcm_native.c linux-sh4/sound/core/pcm_native.c
*** linux-sh4-2.6.32.10_stm24_0201_orig/sound/core/pcm_native.c	Mon May  3 15:58:10 2010
--- linux-sh4/sound/core/pcm_native.c	Tue May  4 00:46:19 2010
***************
*** 885,890 ****
--- 885,892 ----
  			      SNDRV_PCM_STATE_RUNNING);
  }
  
+ EXPORT_SYMBOL(snd_pcm_start);
+ 
  /*
   * stop callbacks
   */
***************
*** 1883,1888 ****
--- 1885,1892 ----
  	return 0;
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_constraints_init);
+ 
  int snd_pcm_hw_constraints_complete(struct snd_pcm_substream *substream)
  {
  	struct snd_pcm_runtime *runtime = substream->runtime;
***************
*** 1966,1971 ****
--- 1970,1977 ----
  	return 0;
  }
  
+ EXPORT_SYMBOL_GPL(snd_pcm_hw_constraints_complete);
+ 
  static void pcm_release_private(struct snd_pcm_substream *substream)
  {
  	snd_pcm_unlink(substream);
*** a/sound/core/pcm_lib.c    2009-12-03 04:51:21.000000000 +0100
--- b/pcm_lib.c    2011-05-30 22:57:54.407735963 +0200
***************
*** 434,439 ****
--- 434,441 ----
  	return snd_pcm_update_hw_ptr_post(substream, runtime);
  }
  
+ EXPORT_SYMBOL(snd_pcm_update_hw_ptr);
+ 
  /**
   * snd_pcm_set_ops - set the PCM operators
   * @pcm: the pcm instance
